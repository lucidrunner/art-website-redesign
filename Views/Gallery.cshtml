@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.GalleryPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Atelje_Konstram.Utility
@using Atelje_Konstram.ViewModels
@{
	Layout = "master.cshtml";
    var backgroundImage = Model.BannerImage != null ? Model.BannerImage.Url() : string.Empty;
    var pageTitle = Model.PageTitle ?? string.Empty;
    var contactTitle = Model.ContactTitle ?? string.Empty;
    var contactInfo = Model.ContactInfo ?? string.Empty;
    var ctaLinkText = Model.CtaText ?? string.Empty;
}

@await Umbraco.RenderMacroAsync("BannerImage", new {imageUrl=@backgroundImage, bannerText=@pageTitle})

<section class="container text-container">
    <article>
        @await Html.GetBlockGridHtmlAsync(Model, "galleryText")
    </article>
</section>

<section class="section container cta-section">
    <div class="cta-container">
        <a href="#contact-form">@ctaLinkText</a>
    </div>
</section>

@*Istället för foreach, gör en for och ge ID av varje section till "gallery-section-INDEX", sen kan vi använda scroll to nästa sektion *@
@{
    var list = GetTechniqueLists();
}
@for (int index = 0; index < list.Count; index++)
{
    LabeledCollection techniqueCollection = list[index];
    <section id="gallery-section-@index" class="gallery-section container">
        <hr/>
        <h2 class="gallery-section-title" onclick="goToSection(@index+1)">@techniqueCollection.Name</h2>
        
        <div class="image-grid">
            @* Vi kan använda dynamic för att slippa kompileringsproblem i våra olika c#-funktioner, men vi måste ha 
            GalleryImage när vi skapar html här i själva dokumentet för att umbraco inte ska krascha
        *@
            @foreach (GalleryImage galleryImage in @techniqueCollection.Collection)
            {
                <button class="image-grid-container image-col-3" aria-label="Öppna @galleryImage.Titel" onclick="showModal(
            {
                title: '@galleryImage.Titel',
                url: '@galleryImage.Image.Url()',
                altText: '@galleryImage.AltText',
                description: '@galleryImage.Beskrivning',
                technique: '@galleryImage.Technique',
                series: '@string.Join(", ", @galleryImage.Series)',
                seriesTags: '@string.Join(", ", @galleryImage.Tags)',
                width: '@galleryImage.Width',
                height: '@galleryImage.Height',
                availability: '@galleryImage.Availability',
                miscTags: '@string.Join(", ", @galleryImage.MiscTags)',

            }
            )">
                    <div class="image-grid-item image-grid-hoverable">
                        <img class="image-grid-item-image" src='@galleryImage.Image?.Url()' alt="@galleryImage.AltText"/>
                        <div class="image-grid-item-text-line">
                                <h3 class="image-grid-item-text">@galleryImage.Titel</h3>
                        </div>
                    </div>
                </button>
            }
        </div>
    </section>
}

<section class="container">
    <hr />
    <article class="contact-container">
        <div class="contact-anchor" id="contact-form"></div>
        @{
        await Html.RenderPartialAsync("Partials/ContactForm", new PageContactFormViewModel(){Title=@contactTitle, PageInfo = @contactInfo});
        }
    </article>
</section>

<section id="gallery-modal" class="gallery-modal-overlay">
    <div id="gallery-modal-container" tabindex="1" class="container gallery-modal-inner">
        <button id="btn-modal-exit" class="btn-modal-exit" onclick="hideModal()" aria-label="Stäng">X</button>
        <img id="gallery-modal-image" class="gallery-modal-image"/>
        <div class="gallery-modal-title-line">
            <h2 id="gallery-modal-title">Test Title</h2>
            <a id="gallery-modal-link" target="_blank">Öppna i helskärm <span aria-ignore>⧉</span></a>
        </div>

        <div class="gallery-modal-container-content">

            <div>
            <h3>Beskrivning</h3>
            <p id="gallery-modal-description"></p>
            </div>

            <div>
                <h3>Teknik</h3>
                <p id="gallery-modal-technique"></p>
                <h3>Serie</h3>
                <p id="gallery-modal-series"></p>
                <h4>Motiv</h4>
                <p id="gallery-modal-series-tags"></p>
            </div>

            <div>
                <h3>Mått</h3>
                <p id="gallery-modal-size"></p>
                <h3>Detaljer</h3>
                <p id="gallery-modal-availability"></p>
                <h4>Taggar</h4>
                <p id="gallery-modal-misc-tags"></p>
            </div>

        </div>

    </div>

</section>


<script>
    
    function goToSection(index){
        let nextSection = $("#gallery-section-" + index);
        if (nextSection.get(0) !== undefined) {
            $("#gallery-section-" + index).get(0).scrollIntoView();
        }
    }

    function showModal(imageObject){
        //Title
        $("#gallery-modal-title").text(imageObject.title);
        $("#gallery-modal-link").attr("href", imageObject.url);
        
        //Image
        $("#gallery-modal-image").attr("src", imageObject.url);
        $("#gallery-modal-image").attr("alt", imageObject.altText);

        
        //Optional Description
        $("#gallery-modal-description").text(imageObject.description);

        //Technique
        $("#gallery-modal-technique").text(imageObject.technique);

        //Series

        $("#gallery-modal-series").text(imageObject.series);
        $("#gallery-modal-series-tags").text(imageObject.seriesTags);


        //Sizes
        $("#gallery-modal-size").text(imageObject.width + "x" + imageObject.height);
        
        //Details
        $("#gallery-modal-availability").text("Tillgänglighet: " + imageObject.availability);
        $("#gallery-modal-misc-tags").text(imageObject.miscTags);
        
        //Accessability
        $("#btn-modal-exit").attr("aria-label", "Stäng " + imageObject.title);

        //Show the modal
        $("#gallery-modal").show();

        //Force top scroll
        $("#gallery-modal").scrollTop(-200);

        
        //Hide modal if we click outside the inner modal space
        $("#gallery-modal").on('click', event => checkHide(event));
        //Hide modal if we press escape
        $(document).keyup(function(event){
           if(event.originalEvent.key === "Escape"){
                hideModal();    
           }
        });
        
        //Finally, focus the modal so we can scroll via our keyboard, and then focus the button to keep keyboard navigation consistent
        $("#gallery-modal-container").focus();
        $("#btn-modal-exit").focus();
    }
    
    function checkHide(e) {
        if (e.target.id === "gallery-modal") {
            hideModal();
        }
        
    }
    
    function hideModal() {
        $("#gallery-modal").off('click');
        $("#gallery-modal").hide();
    }
    


</script>

@{

    List<LabeledCollection> GetTechniqueLists()
    {
        
        Dictionary<string, LabeledCollection> techniqueLists = new();

        foreach (dynamic galleryImage in Model.Children())
        {
            string technique = galleryImage.Technique;
            if (technique == null)
                continue;

            if (!techniqueLists.ContainsKey(technique))
            {
                techniqueLists[technique] = new LabeledCollection(technique);
            }


            techniqueLists[technique].Add(galleryImage);

        }

        return techniqueLists.Values.ToList();
    }
}